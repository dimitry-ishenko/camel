///////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2014 Dimitry Ishenko
// Distributed under the GNU GPL v2. For full terms please visit:
// http://www.gnu.org/licenses/gpl.html
//
// Contact: dimitry (dot) ishenko (at) (gee) mail (dot) com

///////////////////////////////////////////////////////////////////////////////////////////////////
#ifndef PAM_H
#define PAM_H

///////////////////////////////////////////////////////////////////////////////////////////////////
#include "pam_type.h"
#include <string>

///////////////////////////////////////////////////////////////////////////////////////////////////
struct pam_handle;

///////////////////////////////////////////////////////////////////////////////////////////////////
namespace pam
{

///////////////////////////////////////////////////////////////////////////////////////////////////
typedef pam_handle* handle;

///////////////////////////////////////////////////////////////////////////////////////////////////
class context
{
public:
    context(const std::string& service, const std::string& username= std::string());
    ~context();

    bool valid() const { return _M_handle; }

    void set_item(item, const std::string& value);
    std::string get_item(item);

    void authenticate();

    void open_session();
    void close_session();

private:
    handle _M_handle= nullptr;

    bool _M_cred= false;
    int setcred();
    int rmcred();

    int _M_code;
};

///////////////////////////////////////////////////////////////////////////////////////////////////
}

///////////////////////////////////////////////////////////////////////////////////////////////////
#endif // PAM_H
