///////////////////////////////////////////////////////////////////////////////////////////////////
#ifndef LOGGER_H
#define LOGGER_H

///////////////////////////////////////////////////////////////////////////////////////////////////
#include <iostream>

///////////////////////////////////////////////////////////////////////////////////////////////////
namespace sys
{

///////////////////////////////////////////////////////////////////////////////////////////////////
enum level
{
    emergency,
    alert,
    critical,
    error,
    warning,
    notice,
    info,
    debug
};

///////////////////////////////////////////////////////////////////////////////////////////////////
class streambuf: public std::streambuf
{
protected:
    static constexpr level default_level= info;

    std::streamsize xsputn(const char* message, std::streamsize n) override;

    level current= default_level;
    friend class stream;
};

///////////////////////////////////////////////////////////////////////////////////////////////////
class stream: public std::ostream
{
public:
    stream(): std::ostream(&buffer) { }
    stream& operator<<(level);

protected:
    streambuf buffer;
};

///////////////////////////////////////////////////////////////////////////////////////////////////
extern stream logger;

///////////////////////////////////////////////////////////////////////////////////////////////////
}

///////////////////////////////////////////////////////////////////////////////////////////////////
#endif // LOGGER_H
