///////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2013-2014 Dimitry Ishenko
// Distributed under the GNU GPL v2. For full terms please visit:
// http://www.gnu.org/licenses/gpl.html
//
// Contact: dimitry (dot) ishenko (at) (gee) mail (dot) com

///////////////////////////////////////////////////////////////////////////////////////////////////
#ifndef ENTRY_H
#define ENTRY_H

///////////////////////////////////////////////////////////////////////////////////////////////////
#include "file.h"

#include <functional>
#include <vector>
#include <string>

#include <sys/types.h>

///////////////////////////////////////////////////////////////////////////////////////////////////
namespace storage
{

///////////////////////////////////////////////////////////////////////////////////////////////////
struct entry;
typedef std::vector<storage::entry> entries;

typedef std::function<bool(const entry&)> filter_func;
typedef std::function<int(const entry&, const entry&)> compare_func;

///////////////////////////////////////////////////////////////////////////////////////////////////
extern const filter_func filter_all;
extern const compare_func compare_version;
extern const compare_func compare_alpha;

///////////////////////////////////////////////////////////////////////////////////////////////////
struct entry
{
    static entries get(const std::string& path, const filter_func& filter= filter_all,
                                                const compare_func& compare= compare_version);

    std::string name;
    storage::type type;

    ino_t inode;
};

///////////////////////////////////////////////////////////////////////////////////////////////////
}

///////////////////////////////////////////////////////////////////////////////////////////////////
#endif // ENTRY_H
