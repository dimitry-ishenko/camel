///////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2013-2014 Dimitry Ishenko
// Distributed under the GNU GPL v2. For full terms please visit:
// http://www.gnu.org/licenses/gpl.html
//
// Contact: dimitry (dot) ishenko (at) (gee) mail (dot) com

///////////////////////////////////////////////////////////////////////////////////////////////////
#include "address.h"
#include "errno_error.h"

#include <sys/socket.h>
#include <netinet/in.h>
#include <arpa/inet.h>

///////////////////////////////////////////////////////////////////////////////////////////////////
namespace net
{

///////////////////////////////////////////////////////////////////////////////////////////////////
const address address::any(INADDR_ANY);
const address address::broadcast(INADDR_BROADCAST);

///////////////////////////////////////////////////////////////////////////////////////////////////
address::address(const std::string& x)
{
    if(!inet_aton(x.data(), &_M_addr)) throw errno_error();
}

///////////////////////////////////////////////////////////////////////////////////////////////////
std::string address::to_string() const
{
    return inet_ntoa(_M_addr);
}

///////////////////////////////////////////////////////////////////////////////////////////////////
in_addr_t address::value() const
{
    return ntohl(_M_addr.s_addr);
}

///////////////////////////////////////////////////////////////////////////////////////////////////
}
