///////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2014 Dimitry Ishenko
// Distributed under the GNU GPL v2. For full terms please visit:
// http://www.gnu.org/licenses/gpl.html
//
// Contact: dimitry (dot) ishenko (at) (gee) mail (dot) com

///////////////////////////////////////////////////////////////////////////////////////////////////
#ifndef ARGUMENTS_HPP
#define ARGUMENTS_HPP

///////////////////////////////////////////////////////////////////////////////////////////////////
#include "charpp.hpp"
#include "container.hpp"

#include <initializer_list>
#include <string>
#include <vector>

///////////////////////////////////////////////////////////////////////////////////////////////////
namespace app
{

///////////////////////////////////////////////////////////////////////////////////////////////////
class arguments: public container<std::vector<std::string>>
{
public:
    arguments() = default;
    arguments(const arguments&) = default;
    arguments(arguments&&) = default;

    arguments(std::initializer_list<value_type> x) { insert(x); }

    arguments& operator=(const arguments&) = default;
    arguments& operator=(arguments&&) = default;

    ////////////////////
    using container::insert;
    using container::erase;

    ////////////////////
    charpp_ptr to_charpp() const;
    charpp_ptr to_charpp(const std::string& prepend) const;
};

///////////////////////////////////////////////////////////////////////////////////////////////////
}

///////////////////////////////////////////////////////////////////////////////////////////////////
#endif // ARGUMENTS_HPP
